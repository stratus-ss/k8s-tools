[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "openshift-control-plane-replacement"
version = "1.0.0"
description = "Automated tool for safely replacing failed control plane nodes in OpenShift bare metal clusters"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "OpenShift Tools Team"}
]
maintainers = [
    {name = "OpenShift Tools Team"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Clustering",
    "Topic :: Utilities",
]
keywords = [
    "openshift", 
    "kubernetes", 
    "bare-metal", 
    "control-plane", 
    "etcd", 
    "automation", 
    "cluster-management"
]
requires-python = ">=3.8"
dependencies = [
    "PyYAML>=6.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-import-order>=0.18.0",
    "flake8-bugbear>=23.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.5.0",
    "mkdocstrings>=0.19.0",
]

[project.urls]
Homepage = "https://github.com/your-org/openshift-control-plane-replacement"
Documentation = "https://github.com/your-org/openshift-control-plane-replacement#readme"
Repository = "https://github.com/your-org/openshift-control-plane-replacement.git"
"Bug Tracker" = "https://github.com/your-org/openshift-control-plane-replacement/issues"

[project.scripts]
replace-control-plane = "replace_control_plane.replace_control_plane:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
include = ["replace_control_plane*"]
exclude = ["tests*", "docs*", "preflight*", "installation-helpers*"]

# Black code formatting configuration
[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    # Directories
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.venv
    | venv
    | _build
    | buck-out
    | build
    | dist
    | node_modules
)/
'''

# isort import sorting configuration  
[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["replace_control_plane"]
known_first_party = ["replace_control_plane"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = ["venv/*", ".venv/*", "build/*", "dist/*"]

# MyPy type checking configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Set to true when adding type hints
disallow_incomplete_defs = false  # Set to true when adding type hints
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "yaml.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=replace_control_plane",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage configuration
[tool.coverage.run]
branch = true
source = ["replace_control_plane"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "@abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
